# Elastic Beanstalk Nginx Configuration File

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format elb_proxy_log '$proxy_protocol_addr - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent"';
    log_format elb_log '$http_x_forwarded_for - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent"' ;

    access_log    /var/log/nginx/access.log;

    server {
        listen 80;
        access_log    /var/log/nginx/80_access.log elb_log;
        server_tokens off;

#        set $livehack "";
#        if ($http_x_forwarded_for != '24.153.178.134') {
#          set $livehack "I";
#        }
#        if ($host = 'www.victiv.com') {
#          set $livehack "${livehack}H";
#        }
#        if ($livehack = "IH") {
#          return 301 http://www.ruckusgaming.com;
#          break;
#        }

        return 301 https://$host$request_uri;
    }

    server{
        listen 81;
        access_log    /var/log/nginx/81_access.log;
        location / {
            proxy_pass  http://docker;
            proxy_http_version  1.1;

            proxy_set_header    Host    $host;
            #proxy_set_header    X-Real-IP   $remote_addr;
            proxy_set_header    X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection  "upgrade";
        }

        location /admin {
            proxy_pass  http://docker;
            proxy_http_version  1.1;
            allow 127.0.0.1;
            deny all;
        }
    }

    server{
        listen 82 proxy_protocol;
        access_log /var/log/nginx/82_access.log elb_proxy_log;

        location / {
            proxy_pass  http://docker;
            proxy_http_version  1.1;

            proxy_set_header    Host    $host;
            #proxy_set_header    X-Real-IP   $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_protocol_addr;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection  "upgrade";
        }

        location /admin {
            proxy_pass  http://docker;
            proxy_http_version  1.1;

            proxy_set_header    Host    $host;
            #proxy_set_header    X-Real-IP   $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_protocol_addr;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection  "upgrade";

            set $allow false;
            if ($proxy_protocol_addr ~ " ?24\.153\.178\.134$") {
              set $allow true;
            }
            if ($proxy_protocol_addr ~ " ?127\.0\.0\.1$") {
              set $allow false;
            }
            if ($allow = false) {
              return 403;
            }
        }
    }

  # AWS automatically generates the enabled site with a random port
  include     /etc/nginx/sites-enabled/*;
}
